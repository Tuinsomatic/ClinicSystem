package gui;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.util.HashSet;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import gui.PatientInterface;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


/**
 *
 * @author rowse
 */
public class Login extends javax.swing.JFrame {

    public Integer userRow = null; 
    /**
     * Creates new form Login
     */
    public Login() {
        initComponents();
        //BringFromFile();
    }
    
    public void BringFromFile(){
        String userFile = "Accounts.txt";
        File users = new File(userFile);
        
        try{
            BufferedReader reader = new BufferedReader(new FileReader(users));
            //String firstLine = reader.readLine().trim();
            //String[] identifier = firstLine.split("/");
            //DefaultTableModel tableModel = (DefaultTableModel)accountsTable.getModel();
            //tableModel.setColumnIdentifiers(identifier);
            
            Object[] userTableRows = reader.lines().toArray();
            
            for(int i=0; i<userTableRows.length; i++){
                String row = userTableRows[i].toString().trim();
                String[] collectedRow = row.split("/");
                //tableModel.addRow(collectedRow);
            }
        }
        catch (Exception exception){
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, exception);
        }
    }
    
    public Boolean CheckCredentials(String id, String pw){
        String userFile = "Accounts.txt";
        File users = new File(userFile);
        
        try{
            BufferedReader reader = new BufferedReader(new FileReader(users));
            Object[] userTableRows = reader.lines().toArray();
            
            for(int i=0; i<userTableRows.length; i++){
                String row = userTableRows[i].toString().trim();
                String[] collectedRow = row.split("/");
                for(int j=0; j<collectedRow.length; j++){
                    if (collectedRow[j].equals(id) && collectedRow[j+1].equals(pw)){
                        //System.out.println("Success");
                        userRow = i;
                        return true;
                    }
                    else{
                        //System.out.println("Fail");
                    }
                }
            }
        }
        catch (Exception exception){
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, exception);
        }
        return false;
    }
    
    public void SwitchToPatient(String id){
        PatientInterface p = new PatientInterface();
        p.setPatientID(usernameField.getText());
        System.out.println("wwwwww " + p.patientID);
        p.getAppointments();
        p.getDoctorRatings();
        p.setVisible(true);
        this.dispose();
    }
    
    public void SwitchToSecretary(String id){
        SecretaryInterface p = new SecretaryInterface();
        p.secretaryID = usernameField.getText();
        p.setVisible(true);
        this.dispose();
    }
    
    public void SwitchToDoctor(String id){
        DoctorInterface p = new DoctorInterface();
        p.doctorID = usernameField.getText();
        p.setVisible(true);
        this.dispose();
    }
    
    public void SwitchToAdministrator(String id){
        AdminInterface p = new AdminInterface();
        p.adminID = usernameField.getText();
        p.setVisible(true);
        this.dispose();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        usernameField = new javax.swing.JTextField();
        passwordField = new javax.swing.JTextField();
        loginButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        accountsTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        loginButton.setText("Log In");
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });

        accountsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        accountsTable.setColumnSelectionAllowed(true);
        jScrollPane2.setViewportView(accountsTable);
        accountsTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        jLabel1.setText("User ID");

        jLabel2.setText("Password");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(loginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 465, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(usernameField, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usernameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(loginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(161, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
        CheckCredentials(usernameField.getText(), passwordField.getText());
        
        String userFile = "Accounts.txt";
        File users = new File(userFile);
        BufferedReader reader;
        try {
            reader = new BufferedReader(new FileReader(users));
            Object[] userTableRows = reader.lines().toArray();
            String row = userTableRows[userRow].toString().trim();
            String[] collectedRow = row.split("/");
            System.out.println(collectedRow[0]);
            
            if ("Patient".equals(collectedRow[0])){
                System.out.println("Patient");
                SwitchToPatient(usernameField.getText());
            }
            else if ("Administrator".equals(collectedRow[0])){
                System.out.println("Admin");
                SwitchToAdministrator(usernameField.getText());
            }
            else if ("Secretary".equals(collectedRow[0])){
                System.out.println("Secretary");
                SwitchToSecretary(usernameField.getText());
            }
            else{
                System.out.println("Doctor");
                SwitchToDoctor(usernameField.getText());
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_loginButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable accountsTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton loginButton;
    private javax.swing.JTextField passwordField;
    public javax.swing.JTextField usernameField;
    // End of variables declaration//GEN-END:variables

}
